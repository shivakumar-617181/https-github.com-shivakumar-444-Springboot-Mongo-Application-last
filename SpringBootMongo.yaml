apiVersion: apps/v1
kind: Deployment
metadata:
  name: springboot-deployment
  namespace: production
spec:
  replicas: 2
  selector:
    matchLabels:
      application: springbootmongo
  strategy:
    type: RollingUpdate
  template:
    metadata:
      name: spring-pod
      labels:
        application: springbootmongo
    spec:
      containers:
      - name: spring-container
        image: shivakumar357/testrepo:latest
        ports:
        - containerPort: 8080
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 400m
            memory: 512Mi
        env:
        - name: MONGO_DB_HOSTNAME
          value: mongo-service #MongoDB Service Name
        - name: MONGO_DB_USERNAME
          value: production
        - name: MONGO_DB_PASSWORD
          value: production@123
---
apiVersion: v1
kind: Service
metadata:
  name: springboot-service
  namespace: production
spec:
  type: NodePort
  selector:
    application: springbootmongo
  ports:
  - port: 80
    targetPort: 8080
---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
   name: mongo-replicaset
   namespace: production
spec:
  replicas: 1
  selector:
    matchLabels:
      application: mongo
  template:
    metadata:
      name: mongo-pod
      labels:
        application: mongo
    spec:
      containers:
      - name: mongo-container
        image: mongo
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: production
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: production@123
          # dummy commit shiva
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-service #Service Name Should be Given for MONGO_DB_HOSTNAME
  namespace: production
spec:
  type: ClusterIP
  selector:
    application: mongo
  ports:
  - port: 27017
    targetPort: 27017
    # dummy commit to test
